#!/bin/bash

####################################################################
#
# Adaptado de https://sadsloth.net/post/install-gvm11-src-on-debian/
#
####################################################################

sudo locale-gen en_US.UTF-8 ;\
export LC_ALL="C"

sudo apt update
sudo apt -y dist-upgrade
sudo apt -y autoremove
sudo apt install -y software-properties-common
sudo apt install -y curl xml-twig-tools

#wget -qO - https://raw.githubusercontent.com/yarnpkg/releases/gh-pages/debian/pubkey.gpg | sudo apt-key add -

sudo apt install -y cmake pkg-config libglib2.0-dev libgpgme-dev libgnutls28-dev uuid-dev libssh-gcrypt-dev \
libldap2-dev doxygen graphviz libradcli-dev libhiredis-dev libpcap-dev bison libksba-dev libsnmp-dev \
gcc-mingw-w64 heimdal-dev libpopt-dev xmltoman redis-server xsltproc libical-dev postgresql \
postgresql-contrib postgresql-server-dev-all gnutls-bin nmap rpm nsis curl wget fakeroot gnupg \
sshpass socat snmp smbclient libmicrohttpd-dev libxml2-dev python-polib gettext rsync \
python3-paramiko python3-lxml python3-defusedxml python3-pip python3-psutil virtualenv vim git

sudo apt install -y texlive-latex-extra --no-install-recommends

sudo apt install -y texlive-fonts-recommended

curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
sudo apt update
sudo apt -y install yarn
echo 'export PATH="$PATH:/opt/gvm/bin:/opt/gvm/sbin:/opt/gvm/.local/bin"' | sudo tee -a /etc/profile.d/gvm.sh
sudo chmod 0755 /etc/profile.d/gvm.sh
source /etc/profile.d/gvm.sh
sudo bash -c 'cat << EOF > /etc/ld.so.conf.d/gvm.conf
# gmv libs location
/opt/gvm/lib
EOF'

sudo mkdir /opt/gvm
sudo adduser gvm --disabled-password --home /opt/gvm/ --no-create-home --gecos ''
sudo usermod -aG redis gvm  # This is for ospd-openvas can connect to redis.sock.. If you have a better idea here, pls write in the comments :) ;\
sudo chown gvm:gvm /opt/gvm/


echo "=================================================================================="
echo "Usuario actual: gvm"
echo "=================================================================================="

sudo su - gvm -c "cd /opt/gvm"

sudo su - gvm -c "mkdir src"
sudo su - gvm -c "cd src"
sudo su - gvm -c "export PKG_CONFIG_PATH=/opt/gvm/lib/pkgconfig:$PKG_CONFIG_PATH"

sudo su - gvm -c "git clone -b gvm-libs-11.0 --single-branch  https://github.com/greenbone/gvm-libs.git"
sudo su - gvm -c "git clone -b openvas-7.0 --single-branch https://github.com/greenbone/openvas.git"
sudo su - gvm -c "git clone -b gvmd-9.0 --single-branch https://github.com/greenbone/gvmd.git"
sudo su - gvm -c "git clone -b master --single-branch https://github.com/greenbone/openvas-smb.git"
sudo su - gvm -c "git clone -b gsa-9.0 --single-branch https://github.com/greenbone/gsa.git"
sudo su - gvm -c "git clone -b ospd-openvas-1.0 --single-branch  https://github.com/greenbone/ospd-openvas.git"
sudo su - gvm -c "git clone -b ospd-2.0 --single-branch https://github.com/greenbone/ospd.git"

sudo su - gvm -c "cd gvm-libs"
sudo su - gvm -c " export PKG_CONFIG_PATH=/opt/gvm/lib/pkgconfig:$PKG_CONFIG_PATH"
sudo su - gvm -c " mkdir build"
sudo su - gvm -c " cd build"
sudo su - gvm -c " cmake -DCMAKE_INSTALL_PREFIX=/opt/gvm .."
sudo su - gvm -c " make"
sudo su - gvm -c " make doc"
sudo su - gvm -c " make install"
sudo su - gvm -c " cd /opt/gvm/src"

sudo su - gvm -c "cd openvas-smb"
sudo su - gvm -c " export PKG_CONFIG_PATH=/opt/gvm/lib/pkgconfig:$PKG_CONFIG_PATH"
sudo su - gvm -c " mkdir build"
sudo su - gvm -c " cd build/"
sudo su - gvm -c " cmake -DCMAKE_INSTALL_PREFIX=/opt/gvm .."
sudo su - gvm -c " make"
sudo su - gvm -c " make install"
sudo su - gvm -c " cd /opt/gvm/src"

sudo su - gvm -c "cd openvas"
sudo su - gvm -c " export PKG_CONFIG_PATH=/opt/gvm/lib/pkgconfig:$PKG_CONFIG_PATH"
sudo su - gvm -c " mkdir build"
sudo su - gvm -c " cd build/"
sudo su - gvm -c " cmake -DCMAKE_INSTALL_PREFIX=/opt/gvm .."
sudo su - gvm -c " make"
sudo su - gvm -c " make doc"
sudo su - gvm -c " make install"
sudo su - gvm -c " cd /opt/gvm/src"

echo "=================================================================================="
echo "Usuario actual: root"
echo "=================================================================================="

sudo su - root -c "export LC_ALL="C""
sudo su - root -c "/sbin/ldconfig"
sudo su - root -c "cp /etc/redis/redis.conf /etc/redis/redis.orig"
sudo su - root -c "cp /opt/gvm/src/openvas/config/redis-openvas.conf /etc/redis/"
sudo su - root -c "chown redis:redis /etc/redis/redis-openvas.conf"
sudo su - root -c "echo 'db_address = /run/redis-openvas/redis.sock' > /opt/gvm/etc/openvas/openvas.conf"
sudo su - root -c "systemctl enable redis-server@openvas.service"
sudo su - root -c "systemctl start redis-server@openvas.service"

sudo su - root -c "/sbin/sysctl -w net.core.somaxconn=1024"
sudo su - root -c "/sbin/sysctl vm.overcommit_memory=1"

sudo su - root -c "echo 'net.core.somaxconn=1024'  >> /etc/sysctl.conf2"
sudo su - root -c "echo 'vm.overcommit_memory=1' >> /etc/sysctl.conf"

sudo su - root -c "cat << EOF > /etc/systemd/system/disable-thp.service
[Unit]
Description=Disable Transparent Huge Pages (THP)

[Service]
Type=simple
ExecStart=/bin/sh -c 'echo 'never' > /sys/kernel/mm/transparent_hugepage/enabled && echo 'never' > /sys/kernel/mm/transparent_hugepage/defrag'

[Install]
WantedBy=multi-user.target
EOF"

sudo su - root -c "systemctl daemon-reload"
sudo su - root -c "systemctl start disable-thp"
sudo su - root -c "systemctl enable disable-thp"
sudo su - root -c "systemctl restart redis-server"

#Defaults        secure_path="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin:/opt/gvm/sbin"

### Allow the user running ospd-openvas, to launch openvas with root permissions
#gvm ALL = NOPASSWD: /opt/gvm/sbin/openvas
#gvm ALL = NOPASSWD: /opt/gvm/sbin/gsad

echo "=================================================================================="
echo "Usuario actual: gvm"
echo "=================================================================================="

sudo su - gvm -c "/opt/gvm/"
sudo su - gvm -c "greenbone-nvt-sync"

sudo openvas -u

cd gvmd
 export PKG_CONFIG_PATH=/opt/gvm/lib/pkgconfig:$PKG_CONFIG_PATH
 sed -i 's/POSTGRES=0/POSTGRES=1/g' tools/gvm-portnames-update.in
 mkdir build
 cd build/
 cmake -DCMAKE_INSTALL_PREFIX=/opt/gvm ..
 make
 make doc
 make install
 cd /opt/gvm/src


echo "=================================================================================="
echo "Usuario actual: postgres"
echo "=================================================================================="

sudo su - postgres -c "export LC_ALL='C'"
sudo su - postgres -c "createuser -DRS gvm"
sudo su - postgres -c "createdb -O gvm gvmd"

sudo su - postgres -c "psql gvmd -c 'create role dba with superuser noinherit;'"
sudo su - postgres -c "psql gvmd -c 'grant dba to gvm;'"
sudo su - postgres -c "psql gvmd -c 'create extension \"uuid-ossp\";'"
sudo su - postgres -c "psql gvmd -c '\q'"



echo "=================================================================================="
echo "Usuario actual: gvm"
echo "=================================================================================="

sudo su - gvm -c "gvm-manage-certs -a"

sudo su - gvm -c "gvmd --create-user=admin --password=admin"

sudo su - gvm -c "greenbone-certdata-sync"


echo "=================================================================================="
echo "Usuario actual: " && whoami
echo "=================================================================================="

mkdir iana_service_ports
cd iana_service_ports
wget https://www.iana.org/assignments/service-names-port-numbers/service-names-port-numbers.xml
gvm-portnames-update service-names-port-numbers.xml
cd /opt/gvm/src

cd gsa
 export PKG_CONFIG_PATH=/opt/gvm/lib/pkgconfig:$PKG_CONFIG_PATH
 mkdir build
 cd build/
 cmake -DCMAKE_INSTALL_PREFIX=/opt/gvm ..
 make
 make doc
 make install
 touch /opt/gvm/var/log/gvm/gsad.log
 cd /opt/gvm/src

cd /opt/gvm/src
export PKG_CONFIG_PATH=/opt/gvm/lib/pkgconfig:$PKG_CONFIG_PATH
virtualenv --python python3.7  /opt/gvm/bin/ospd-scanner/
source /opt/gvm/bin/ospd-scanner/bin/activate

mkdir /opt/gvm/var/run/ospd/
cd ospd
pip3 install .
cd /opt/gvm/src

cd ospd-openvas
pip3 install .
cd /opt/gvm/src



echo "=================================================================================="
echo "Usuario actual: root"
echo "=================================================================================="


sudo su - root -c "cat << EOF > /etc/systemd/system/gvmd.service
[Unit]
Description=Open Vulnerability Assessment System Manager Daemon
Documentation=man:gvmd(8) https://www.greenbone.net
Wants=postgresql.service ospd-openvas.service
After=postgresql.service ospd-openvas.service

[Service]
Type=forking
User=gvm
Group=gvm
PIDFile=/opt/gvm/var/run/gvmd.pid
WorkingDirectory=/opt/gvm
ExecStart=/opt/gvm/sbin/gvmd --osp-vt-update=/opt/gvm/var/run/ospd.sock
ExecReload=/bin/kill -HUP $MAINPID
KillMode=mixed
Restart=on-failure
RestartSec=2min
KillMode=process
KillSignal=SIGINT
GuessMainPID=no
PrivateTmp=true

[Install]
WantedBy=multi-user.target
EOF"

sudo su - root -c "cat << EOF > /etc/systemd/system/gsad.service
[Unit]
Description=Greenbone Security Assistant (gsad)
Documentation=man:gsad(8) https://www.greenbone.net
After=network.target
Wants=gvmd.service

[Service]
Type=forking
PIDFile=/opt/gvm/var/run/gsad.pid
WorkingDirectory=/opt/gvm
ExecStart=/opt/gvm/sbin/gsad --drop-privileges=gvm
Restart=on-failure
RestartSec=2min
KillMode=process
KillSignal=SIGINT
GuessMainPID=no
PrivateTmp=true

[Install]
WantedBy=multi-user.target
EOF"

sudo su - root -c "cat << EOF > /etc/systemd/system/ospd-openvas.service
[Unit]
Description=Job that runs the ospd-openvas daemon
Documentation=man:gvm
After=network.target redis-server@openvas.service
Wants=redis-server@openvas.service

[Service]
Environment=PATH=/opt/gvm/bin/ospd-scanner/bin:/opt/gvm/bin:/opt/gvm/sbin:/opt/gvm/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
Type=forking
User=gvm
Group=gvm
WorkingDirectory=/opt/gvm
PIDFile=/opt/gvm/var/run/ospd-openvas.pid
ExecStart=/opt/gvm/bin/ospd-scanner/bin/python /opt/gvm/bin/ospd-scanner/bin/ospd-openvas --pid-file /opt/gvm/var/run/ospd-openvas.pid --unix-socket=/opt/gvm/var/run/ospd.sock --log-file /opt/gvm/var/log/gvm/ospd-scanner.log --lock-file-dir /opt/gvm/var/run/ospd/
Restart=on-failure
RestartSec=2min
KillMode=process
KillSignal=SIGINT
GuessMainPID=no
PrivateTmp=true

[Install]
WantedBy=multi-user.target
EOF"

sudo su - root -c "systemctl daemon-reload"
sudo su - root -c "systemctl enable gvmd"
sudo su - root -c "systemctl enable gsad"
sudo su - root -c "systemctl enable ospd-openvas"
sudo su - root -c "systemctl start gvmd"
sudo su - root -c "systemctl start gsad"
sudo su - root -c "systemctl start ospd-openvas"

sudo su - root -c "systemctl status gvmd"
sudo su - root -c "systemctl status gsad"
sudo su - root -c "systemctl status ospd-openvas"

